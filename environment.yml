name: tli_env
channels:
  - pytorch # Prioritize official PyTorch builds, including CUDA dependencies
  - nvidia  # Useful for specific NVIDIA CUDA toolkits or drivers if needed
  - conda-forge # Robust community-driven channel with many scientific packages
  - defaults # Default Conda channel, used as a fallback at lowest priority
channel_priority: strict # Essential for faster dependency resolution and predictable package sourcing

dependencies:
  # Python version - align with your project's requirement
  - python=3.9

  # Core Deep Learning Stack (Conda-first installations)
  # Pinning major.minor versions for direct dependencies ensures reproducibility.
  # IMPORTANT: Verify these versions are compatible with your *specific GPU*
  # and each other using official documentation/compatibility matrices.
  - pytorch=2.3.0         # Latest stable PyTorch version at the time of this guide
  - torchvision=0.18.0    # PyTorch's vision library, compatible with PyTorch 2.3.0
  - torchaudio=2.3.0      # PyTorch's audio library, compatible with PyTorch 2.3.0
  - pytorch-cuda=12.1     # **CRUCIAL**: Specifies the CUDA toolkit version PyTorch was built against.
                          # Ensure this matches your NVIDIA GPU driver capabilities.
                          # Common options include 11.8, 12.1, 12.2.
  - bitsandbytes=0.43.1   # 8-bit optimization for LLMs. This version is generally
                          # compatible with PyTorch 2.x and CUDA 12.x.
                          # Ensure your GPU (NVIDIA A40 has CC 8.6) meets minimum compute capability.

  # Common Data Science / LLM Utility Libraries (Conda-first where available)
  - scikit-learn
  - pandas
  - tqdm
  - einops
  - matplotlib
  - scikit-image

  # Temporary fix for NumPy 2.0 compatibility issues.
  # Many downstream libraries (like older pandas, scipy) may not yet be fully compatible with NumPy 2.0.
  # This constraint pins NumPy to a version less than 2.0 (e.g., 1.26.x).
  # Remove this constraint once all your project's dependencies are verified to be
  # fully compatible with NumPy 2.0 (check their release notes!).
  - numpy<2.0

  # Pip-installed packages
  # These are packages that are typically not available via Conda channels,
  # or are often preferred to be installed via Pip due to faster updates or specific builds.
  - pip:
    - transformers==4.43.0   # Moved to pip. Specify exact version.
    - accelerate==0.30.1     # Moved to pip. Keep compatible with transformers.
    - peft==0.11.1           # Moved to pip. Keep compatible with transformers.
    - sentence-transformers  # Often easier to install directly via pip
    - datasets               # Hugging Face Datasets library
    # Add any other project-specific pip dependencies here